{"version":3,"sources":["logo.svg","redux/action.js","compomens/weather.js","compomens/favorites.js","redux/reducers/reducer.js","redux/reducers/reducerUtils.js","redux/store.js","App.js","reportWebVitals.js","index.js"],"names":["actions","Proxy","get","target","prop","undefined","args","type","actionName","replace","toUpperCase","payload","Weather","props","flagColor","useSelector","state","WeatherReducer","cityArr","isFavorite","weatherArr","console","log","flag","flagTmp","dispatch","useDispatch","currentCity","weatherText","key","temperature","temperture","date","useState","degree","setDegree","city","setCity","days","favorite","searchCity","event","a","axios","value","res","getCityArr","data","length","chooseCity","setCurrentCity","LocalizedName","Key","setKey","setWeatherText","WeatherText","y","Temperature","Metric","Value","Math","round","setTemp","res2","setWeatherArr","DailyForecasts","onLoud","useEffect","setFlagTmp","className","style","width","height","list","options","onChange","placeholder","id","map","x","marginTop","background","onClick","class","backgroundColor","addToFavorites","fontSize","i","Maximum","Minimum","convert","fontWeight","Favorites","history","useHistory","favorites","toHomePage","item","name","push","index","marginLeft","cursor","color","e","deleteFromFavorites","initialState","weather","action","setWeather","getWeather","newFavorites","alert","arr","filter","setFlagColor","produce","handlers","handler","toLowerCase","v","createReducer","reducer","combineReducers","store","createStore","window","App","to","fontFamily","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f3a62478.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","function convertActionNameToType(actionName) {\r\n    return actionName.replace(/([A-Z])/g, \"_$1\").toUpperCase();\r\n}\r\n\r\nexport const actions = new Proxy(\r\n    {},\r\n    {\r\n        get: function (target, prop) {\r\n            if (target[prop] === undefined)\r\n                return function (args) {\r\n                    return {\r\n                        type: convertActionNameToType(prop),\r\n                        payload: args\r\n                    };\r\n\r\n                };\r\n\r\n            else return target[prop];\r\n        }\r\n    }\r\n);","import { React, useEffect, useState } from 'react';\r\nimport { ModalBody } from 'react-bootstrap';\r\nimport axios from 'axios';\r\nimport { actions } from '../redux/action'\r\nimport './weather.css';\r\nimport Select from 'react-select';\r\n// import { FcCheckmark } from \"react-icons/fc\";\r\nimport { useSelector, useDispatch, connect } from 'react-redux';\r\nfunction Weather(props) {\r\n    const flagColor = useSelector((state) => state.WeatherReducer.flagColor);\r\n    const isFavorite = useSelector((state) => state.WeatherReducer.isFavorite);\r\n    const cityArr = useSelector((state) => state.WeatherReducer.cityArr);\r\n    // const temperture = useSelector((state) => state.WeatherReducer.temperture);\r\n    const weatherArr = useSelector((state) => state.WeatherReducer.weatherArr);\r\n    console.log(\"weathertu\", weatherArr)\r\n    const flag = useSelector((state) => state.WeatherReducer.flagTmp);\r\n    // const favorites = useSelector((state) => state.WeatherReducer.favorites);\r\n    console.log(\"weatherarr\", cityArr)\r\n    const dispatch = useDispatch();\r\n    const currentCity = useSelector((state) => state.WeatherReducer.currentCity);\r\n    const weatherText = useSelector((state) => state.WeatherReducer.weatherText);\r\n    const key = useSelector((state) => state.WeatherReducer.key);\r\n    const temperature = useSelector((state) => state.WeatherReducer.temperture);\r\n    console.log(\"temper\", temperature)\r\n    const date = useSelector((state) => state.WeatherReducer.date);\r\n    const [degree, setDegree] = useState(\"c\");\r\n    const [city, setCity] = useState();\r\n    const days = [\"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\"];\r\n\r\n    let favorite = { \"id\": key, \"name\": currentCity, \"weatherText\": weatherText }\r\n    const baseURL = \"https://dataservice.accuweather.com/locations/v1/cities/autocomplete?apikey=qQfNRgVyzSfO6hHZLS2BlmjAGKpoUcE8&q=\"\r\n\r\n    const searchCity = async (event) => {\r\n        debugger\r\n        //Request to api autocomplete cities\r\n        const res = await axios.get(`${baseURL}${event.target.value}&language=en-us`)\r\n        console.log(\"resssss\", res)\r\n        debugger\r\n        //set the regiins\r\n        dispatch(actions.getCityArr(res.data))\r\n        setCity(res.data);\r\n        debugger\r\n        if (res.data.length == 1) {\r\n            debugger\r\n            chooseCity(res.data)\r\n        }\r\n    }\r\n    const chooseCity = async (city) => {\r\n        debugger\r\n        dispatch(actions.setCurrentCity(city[0].LocalizedName));\r\n        // key f\r\n        const key = city[0].Key;\r\n        console.log(\"key\", key)\r\n        dispatch(actions.setKey(key));\r\n        const res = await axios.get(`https://dataservice.accuweather.com/currentconditions/v1/${key}?apikey=qQfNRgVyzSfO6hHZLS2BlmjAGKpoUcE8`)\r\n\r\n        // const res = await axios.get(`http://dataservice.accuweather.com/forecasts/v1/daily/5day/${key}?apikey=qQfNRgVyzSfO6hHZLS2BlmjAGKpoUcE8&language=en-us`)\r\n        console.log(\"resssss2\", res)\r\n        debugger\r\n        // dispatch(actions.setWeather(res.WeatherText))\r\n        // discription\r\n        dispatch(actions.setWeatherText(res.data[0].WeatherText))\r\n        let y = res.data[0].Temperature.Metric.Value;\r\n        y = Math.round(y);\r\n        //set the temp\r\n        dispatch(actions.setTemp(y));\r\n        // const res = await axios.get(`http://dataservice.accuweather.com/currentconditions/v1/${key}?apikey=qQfNRgVyzSfO6hHZLS2BlmjAGKpoUcE8`)\r\n        const res2 = await axios.get(`https://dataservice.accuweather.com/forecasts/v1/daily/5day/${key}?apikey=qQfNRgVyzSfO6hHZLS2BlmjAGKpoUcE8&details=true&metric=true`);\r\n        debugger\r\n        dispatch(actions.setWeatherArr(res2.data.DailyForecasts))\r\n    }\r\n    // else {\r\n    //     const res = await axios.get(`http://dataservice.accuweather.com/forecasts/v1/daily/5day/${favorite.id}?apikey=qQfNRgVyzSfO6hHZLS2BlmjAGKpoUcE8&language=en-us`)\r\n    // }\r\n    const convert = () => {\r\n        debugger\r\n        if (degree == 'c') {\r\n            debugger\r\n            dispatch(actions.setTemp(Math.round(temperature * 9 / 5) + 32));\r\n            setDegree(\"f\")\r\n            for (var i in weatherArr) {\r\n                Math.round((weatherArr[i].Temperature.Maximum.Value * 9 / 5) + 32)\r\n                Math.round((weatherArr[i].Temperature.Minimum.Value * 9 / 5) + 32)\r\n            }\r\n        }\r\n        else {\r\n            dispatch(actions.setTemp(Math.round((temperature - 32) * 5 / 9)));\r\n            setDegree(\"c\")\r\n            for (var i in weatherArr) {\r\n                Math.round((weatherArr[i].Temperature.Maximum.Value - 32) * 5 / 9)\r\n                Math.round((weatherArr[i].Temperature.Minimum.Value - 32) * 5 / 9)\r\n            }\r\n        }\r\n    }\r\n    const onLoud = async () => {\r\n        debugger\r\n        dispatch(actions.setCurrentCity(\"Tel Aviv\"));\r\n        const key = 215854;\r\n        dispatch(actions.setKey(key));\r\n        // try {\r\n        const res = await axios.get(`https://dataservice.accuweather.com/currentconditions/v1/215854?apikey=qQfNRgVyzSfO6hHZLS2BlmjAGKpoUcE8`)\r\n        // } catch {\r\n        //     alert(\"Error Event Try again\")\r\n        // }\r\n        console.log(\"resssss2\", res)\r\n        debugger\r\n        dispatch(actions.setWeatherText(res.data[0].WeatherText))\r\n        dispatch(actions.setTemp(res.data[0].Temperature.Metric.Value));\r\n        debugger\r\n        const res2 = await axios.get(`https://dataservice.accuweather.com/forecasts/v1/daily/5day/${key}?apikey=qQfNRgVyzSfO6hHZLS2BlmjAGKpoUcE8&details=true&metric=true`);\r\n        debugger\r\n        dispatch(actions.setWeatherArr(res2.data.DailyForecasts))\r\n    }\r\n\r\n    useEffect(() => {\r\n        debugger\r\n        if (!currentCity) {\r\n            debugger\r\n            onLoud();\r\n        }\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        debugger\r\n        if (flag) {\r\n            debugger\r\n            const res2 = axios.get(`https://dataservice.accuweather.com/forecasts/v1/daily/5day/${key}?apikey=qQfNRgVyzSfO6hHZLS2BlmjAGKpoUcE8&details=true&metric=true`);\r\n            dispatch(actions.setWeatherArr(res2.data.DailyForecasts))\r\n            dispatch(actions.setFlagTmp(false));\r\n        }\r\n    }, [flag])\r\n    return (\r\n        <>\r\n            {/* https://github.com/tamar312/Tamar_Cohen_15-12-2021.git */}\r\n            {/* qQfNRgVyzSfO6hHZLS2BlmjAGKpoUcE8 */}\r\n\r\n            <div className={flagColor ? 'dark' : 'light'} style={{ width: '100%', height: '100%' }}>\r\n                <div className=\"container\">\r\n                    <div className=\" row d-flex justify-content-center\">\r\n                        <input type=\"text\" list=\"city\" className=\"search\"\r\n                            options={cityArr}\r\n                            onChange={searchCity}\r\n                            placeholder=\"Search For Arae:\"\r\n                        ></input>\r\n                        <datalist id=\"city\">\r\n                            {cityArr ? cityArr.map(x => {\r\n                                return (\r\n                                    <option>{x.LocalizedName}</option>)\r\n                            }) : ''}\r\n                        </datalist>\r\n                        <button style={{ height: 'fit-content', marginTop: '2vh', background: 'lightblue' }}\r\n                            onClick={() => chooseCity(city)}>Show</button>\r\n                    </div>\r\n                    <div className='d-flex justify-content-end'>\r\n                        <br></br>\r\n\r\n                        <button class=\"btn btn-primary bshadow fontButtonds\" style={{ backgroundColor: 'black', width: '30vmin' }}\r\n                            onClick={() => dispatch(actions.addToFavorites(favorite))}\r\n                        >\r\n                            Add to favorites</button>\r\n\r\n                        <br></br>\r\n                    </div >\r\n                    <div className='d-flex justify-content-start'>\r\n                        <div style={{ fontSize: 'medium' }}>{currentCity} </div>\r\n                        <p style={{ fontSize: 'larger', marginTop: '1vh' }}>{temperature}{degree}</p>\r\n                    </div>\r\n                    <p className=\"d-flex justify-content-center\" style={{ fontSize: 'large' }}>{weatherText}</p>\r\n                    <button onClick={() => convert()}>Convert Temperature</button>\r\n                    {/* <p>{temperture}</p> */}\r\n                    <div className='row'>\r\n                        {weatherArr ? weatherArr.map((x, i) => {\r\n                            return (\r\n                                <div className='col-md-2 stl' style={{ background: '#7adced' }}>\r\n                                    <div style={{ marginTop: '3vh', fontSize: 'large', fontWeight: '500' }}\r\n                                        className='d-flex justify-content-center'>{days[i]}</div>\r\n                                    <div style={{ marginTop: '1vh', fontSize: 'large', fontWeight: '500' }}\r\n                                        className='d-flex justify-content-center'>{x.date}</div>\r\n                                    <div className='d-flex justify-content-center'\r\n                                        style={{\r\n                                            fontSize: \"large\", marginTop: '3vh', fontSize: 'large', fontWeight: '500'\r\n                                        }}>{x.Temperature.Maximum.Value}{degree}-{x.Temperature.Minimum.Value}{degree}</div>\r\n                                </div>\r\n                            )\r\n                        }) : ''}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\nexport default Weather;\r\n\r\n","import { React, useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\nimport { actions } from '../redux/action'\r\nimport './favorites.css';\r\nimport { useSelector, useDispatch, connect } from 'react-redux';\r\nimport { useHistory } from \"react-router-dom\";\r\nfunction Favorites() {\r\n\r\n    let history = useHistory();\r\n    const dispatch = useDispatch();\r\n    const favorites = useSelector((state) => state.WeatherReducer.favorites);\r\n\r\n    const toHomePage = async (item) => {\r\n        debugger\r\n        dispatch(actions.setCurrentCity(item.name));\r\n        dispatch(actions.setWeatherText(item.weatherText));\r\n        dispatch(actions.setKey(item.id));\r\n        dispatch(actions.setFlagTmp(true));\r\n        //back to honePage\r\n        history.push(\"/weather\");\r\n    }\r\n\r\n    return (\r\n        <>\r\n            {favorites != '' && favorites.map((item, index) => (\r\n                <div class=\"col-sm-2\" style={{ width: '15rem' }}  >\r\n                    <div class=\"card bshadow aa\" style={{ marginLeft: '10vh' }}>\r\n                        <div class=\"card-body\">\r\n                            <h5 style={{ marginTop: '2vh', fontSize: 'large', cursor: 'pointer' }} className=\"d-flex justify-content-center\" onClick={() => toHomePage(item)}>{item.name}</h5>\r\n                            <p className=\"d-flex justify-content-center\" style={{ marginTop: '3vh', fontSize: 'initial' }}>{item.weatherText}</p>\r\n                            <button style={{ marginTop: '3vh', background: 'black', color: 'white' }}\r\n                                className=\"d-flex justify-content-center\"\r\n                                onClick={(e) => dispatch(actions.deleteFromFavorites([index, favorites]))}>‏\r\n                                Remove From Favorites\r\n                            </button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            ))}\r\n        </>\r\n    )\r\n}\r\nexport default Favorites;","import produce from 'immer'\r\nimport { actions } from '../action';\r\n// import { string } from 'yup/lib/locale';\r\nimport createReducer from \"./reducerUtils\";\r\n\r\nconst initialState = {\r\n\r\n    cityArr: [],\r\n    weatherArr: [],\r\n    favorites: [],\r\n    temperture: \"13\",\r\n    currentCity: \"\",\r\n    weatherText: \"\",\r\n    key: \"\",\r\n    flagTmp: false,\r\n    flagColor: false,\r\n    isFavorite: false,\r\n}\r\nconst weather = {\r\n    getCityArr(state, action) {\r\n        debugger\r\n        state.cityArr = action.payload\r\n    },\r\n    setWeather(state, action) {\r\n        debugger\r\n        state.getWeather = action.payload\r\n    },\r\n    setCurrentCity(state = initialState, action) {\r\n\r\n        state.currentCity = action.payload;\r\n    },\r\n    setKey(state = initialState, action) {\r\n\r\n        state.key = action.payload;\r\n    },\r\n    setWeatherText(state = initialState, action) {\r\n\r\n        state.weatherText = action.payload;\r\n    },\r\n    addToFavorites(state = initialState, action) {\r\n        debugger\r\n        const newFavorites = [...state.favorites, action.payload];\r\n        state.favorites = newFavorites;\r\n        // state.isFavorite = true;\r\n        alert(\"Added successfully!\")\r\n\r\n    },\r\n    deleteFromFavorites(state = initialState.favorites, action) {\r\n        let arr = action.payload[1]\r\n        arr = arr.filter((item) => item.id !== action.payload[1][action.payload[0]].id).map(({ id, name, weatherText }) => ({ id, name, weatherText }));\r\n        state.favorites = arr;\r\n    },\r\n    setFlagTmp(state, action) {\r\n        state.flagTmp = action.payload;\r\n    },\r\n    setWeatherArr(state, action) {\r\n        state.weatherArr = action.payload\r\n    },\r\n    setTemp(state = initialState, action) {\r\n        debugger\r\n        state.temperture = action.payload;\r\n    },\r\n    setFlagColor(state, action) {\r\n        debugger\r\n        state.flagColor = actions.payload;\r\n    }\r\n}\r\nexport default produce((state, action) => createReducer(state, action, weather), initialState);\r\n// qQfNRgVyzSfO6hHZLS2BlmjAGKpoUcE8","function convertActionTypeToName(actionType) {\r\n    return actionType.toLowerCase().replace(/_(\\w)/g, v => v[1].toUpperCase());\r\n}\r\n\r\nexport default function createReducer(state, action, handlers) {\r\n    const key = convertActionTypeToName(action.type);\r\n    const handler = handlers[key];\r\n    if (handler) {\r\n        handler(state, action);\r\n    }\r\n}","import { createStore, combineReducers } from 'redux';\r\nimport WeatherReducer from './reducers/reducer';\r\n\r\n\r\nconst reducer = combineReducers({\r\n    WeatherReducer\r\n});\r\nconst store = createStore(reducer);\r\nwindow.store = store;\r\nexport default store;","import logo from './logo.svg';\nimport './App.css';\nimport Weather from './compomens/weather'\nimport Favorites from './compomens/favorites';\nimport { Provider } from 'react-redux';\nimport store from './redux/store';\nimport { actions } from './redux/action';\nimport { useSelector, useDispatch, connect } from 'react-redux';\n\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\nimport { useState } from 'react';\nfunction App() {\n  const dispatch = useDispatch();\n  const currentCity = useSelector((state) => state.WeatherReducer.currentCity);\n  const [color, setColor] = useState('light')\n\n  // const BackColor = () => {\n  //   debugger\n  //   if (color == 'light') {\n  //     debugger\n  //     setColor('dark')\n  //     // dispatch(actions.getCityArr(res.data))\n  //     dispatch(actions.setFlagColor(true))\n  //   } else {\n  //     setColor('light')\n  //     dispatch(actions.setFlagColor(false))\n  //   }\n  // }\n  return (\n    // <Weather></Weather>\n    <div >\n      <center>\n        <div>\n          <b> Weather</b>\n        </div>\n      </center>\n\n      <Provider store={store}>\n\n        <Router>\n          <nav style={{ backgroundColor: '#35bfd7', height: '80px' }}>\n            <br></br>\n            <div className=\"container\">\n              <div className=\"row\">\n\n                <div className=\"col  col-sm-1\">\n                  <button className=\"btn btn-outline-dark\"><Link to=\"/Weather\"><span style={{ color: 'white' }}><b>Weather</b></span></Link></button>\n                </div>\n                <div className=\"col  col-sm-1\">\n                  <button className=\"btn btn-outline-dark\"><Link to=\"/Favorites\"><span style={{ color: 'white' }}><b>Favorites</b></span></Link></button>\n                </div>\n                <div style={{ color: 'white', fontFamily: 'cursive', fontSize: 'medium' }} className=\"col col-sm-8   \"    >\n                  <center>{currentCity}</center>\n                </div>\n                {/* <button onClick={() => BackColor()}>dark/light</button> */}\n                {/* <div className=\"col col-sm-1\"> */}\n                {/* <button style={{ backgroundColor: 'black', color: 'white' }} className=\"btn \" onClick={() => BackColor()}>dark/light</button> */}\n\n                {/* </div> */}\n              </div>\n            </div>\n            <br></br>\n            <br></br>\n          </nav>\n          <div style={{ backgroundColor: 'black', height: '20px' }}></div>\n          <Switch>\n            <Route path=\"/Weather\">\n              <Provider store={store}>\n                <Weather>\n\n                </Weather>\n              </Provider>\n            </Route>\n            <Route path=\"/Favorites\">\n              <Provider store={store}>\n\n                <Favorites></Favorites>\n              </Provider>\n\n            </Route>\n\n\n          </Switch>\n        </Router>\n      </Provider>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { Provider } from 'react-redux';\nimport store from './redux/store';\n// import { store } from './redux/store';\nimport './index.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}